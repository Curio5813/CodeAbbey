"""
==================
Fibonacci Sequence
==================

Even beginner programmers are usually acquainted with the Fibonacci Sequence which is generated as following:

0-th value is 0;
1-st value is 1;
all next values are sum of two immediately preceeding.
So we have:

0: 0
1: 1
2: 1 = 0 + 1
3: 2 = 1 + 1
4: 3 = 1 + 2
5: 5 = 2 + 3
6: 8 = 3 + 5
and so on, so if you continue calculations yourself, you get the the beginning of the sequence like this:

0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, ...
One easily notes that values grow fast! The 17-th value already exceeds thousand, the 31-st is larger than
million.

Problem statement

You will be given several Fibonacci numbers. Your task is to tell their indices in the sequence.

Input data contain the amount of Fibonacci numbers to process.
Next lines contain one Fibonacci number each (from the first 1000 values).
Answer should contain their indices in the sequence, separated by spaces.

Example:

input data:
5
610
34
0
1346269
10946

answer:
15 9 0 31 21

Take care: values could be of hundred or more digits long!
"""

print('')
v1 = [327114817135866584604445222092786289485901368902485200957962177358441191520429751667933217022727867825940121997174498761270528946466892595242473813640691701043259805745267891689561625,
      46368,
      2876752714532189363930922722155697166626212205625975055651487108897637555022358325840971027525781204722662601965,
      505406353675742234083432988996586318812313027234922212847655311233104925710191732091847772413511732637497722573027640822525677705801681909300304870559,
      2833915139500871159286880483175021682924797052577397027048760650064287,
      28591079035324303452480150488745826641447982758987021036407973755767630753479676743616473693722146560961906879776918766301016124570307980590326013349738521794732832066618065314004160020257633,
      298611126818977066918552,
      4511892073403039921025912698279079336962658132728138903804549463159822661521901559514601364254718637420279520732041721346,
      75025,
      3520521795081009298133389068150256767486070420752187588072561774116509929361729683723821683646575039,
      82186452381005908303921699339795353860699455101453346636441756584240231663355338845390501466361958937618980292830190307844401857073430837440997251860323019906010648,
      102098751241605365210994276911130356942241829717669088641675843357036577144651151663139927014083462234470205844005526668054605134051542095639503314608767192463861424988401337986848977992102593240,
      971183874599339129547649988289594072811608739584170445,
      11449921622079721154497199899966677907638995896622219388843656194870204440338362332943924986323117322375295462212094869620734133568,
      5358359254990966640871840,
      700601527838707533318724871765523284890968696066716357168446685359555050818763462119969522887130023714,
      150630789224125052274565479647241274612622184456338070874396423364572570504756362755039699159578830726860179635644992823780175010,
      13,
      181594448268301656413948075911105052760867948344134387820089804440720816962,
      332825110087067562321196029789634457848]
v2 = []
a = 0
p = 1
s = a + p
for i in range(0, 1000):
    s = a
    a = p
    p = a + s
    v2.append(s)
for i in range(0, len(v1)):
    print(v2.index(v1[i]), end=' ')
print('')
print('')
